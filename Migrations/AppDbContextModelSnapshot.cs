// <auto-generated />
using System;
using AgendaApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgendaApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("AgendaApp.Models.Atendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Anotacoes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdConsulta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdMedicoResp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdConsulta")
                        .IsUnique();

                    b.HasIndex("IdMedicoResp");

                    b.ToTable("Atendimentos", (string)null);
                });

            modelBuilder.Entity("AgendaApp.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("AgendaApp.Models.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DtConsulta")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdPet")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdAtendimento")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id", "DtConsulta", "IdPet");

                    b.HasIndex("IdAtendimento")
                        .IsUnique();

                    b.HasIndex("IdPet");

                    b.ToTable("Consultas", (string)null);
                });

            modelBuilder.Entity("AgendaApp.Models.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("CRM")
                        .IsUnique();

                    b.ToTable("Medicos", (string)null);
                });

            modelBuilder.Entity("AgendaApp.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pets", (string)null);
                });

            modelBuilder.Entity("AgendaApp.Models.Atendimento", b =>
                {
                    b.HasOne("AgendaApp.Models.Consulta", "Consulta")
                        .WithOne("Atendimento")
                        .HasForeignKey("AgendaApp.Models.Atendimento", "IdConsulta")
                        .HasPrincipalKey("AgendaApp.Models.Consulta", "Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AgendaApp.Models.Medico", "MedicoResp")
                        .WithMany()
                        .HasForeignKey("IdMedicoResp")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Consulta");

                    b.Navigation("MedicoResp");
                });

            modelBuilder.Entity("AgendaApp.Models.Consulta", b =>
                {
                    b.HasOne("AgendaApp.Models.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("IdPet")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("AgendaApp.Models.Pet", b =>
                {
                    b.HasOne("AgendaApp.Models.Cliente", "Cliente")
                        .WithMany("Pets")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("AgendaApp.Models.Cliente", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("AgendaApp.Models.Consulta", b =>
                {
                    b.Navigation("Atendimento");
                });
#pragma warning restore 612, 618
        }
    }
}
